#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 82 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 3852 0 17 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 24 29 1 #"\n"
0 0 26 3 7 #"#reader"
0 0 24 3 1 #"("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"htdp-intermediate-lambda-reader.ss\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 24 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 24 3 1 #" "
0 0 14 3 10 #"|tron (1)|"
0 0 24 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 24 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 24 3 3 #" #("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 24 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 4 #"none"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 6 #" ())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Constants"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;;Sizes;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Trail"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"T-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";Bike"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";Movement distance"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";Background boundary"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";Point is a Number and a Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"p1start"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"p2start"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ghost-loc"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; a bike is a: (make-bike direction color (make point x y))"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; and a direction is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; -\"up\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; -\"down\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; -\"left\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; -\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 2 #" ["
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"p1-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 7 #"p1start"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"p2-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 14 3 7 #"p2start"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"p1-test-bike"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"p2-test-bike"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";Trail is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; - [List-of Points]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"test-traila"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"test-trailb"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";Player is a bike and a trail:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ["
0 0 14 3 4 #"bike"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 15 #"p1-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"95"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 15 #"p2-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"405"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"p1-test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 12 #"p1-test-bike"
0 0 24 3 1 #" "
0 0 14 3 11 #"test-traila"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"p2-test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 12 #"p2-test-bike"
0 0 24 3 1 #" "
0 0 14 3 11 #"test-trailb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";A world is player1 and player2:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ["
0 0 14 3 7 #"player1"
0 0 24 3 1 #" "
0 0 14 3 7 #"player2"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"p1-test"
0 0 24 3 1 #" "
0 0 14 3 7 #"p2-test"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";triangle-generator: String String -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 125
(
 #";triangle-generator takes a color and a direction and returns a tria"
 #"ngle pointed to the given direction with the given color."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"triangle-generator"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 12 #"triangle/sss"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 15 #"flip-horizontal"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 14 #"right-triangle"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 12 #"triangle/ass"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 14 #"right-triangle"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 12 #"triangle/ass"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 7 #"B-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";render-bike: Player Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";render-bike returns a triangle to represent a player on top of the "
 #"image given."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-bike"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 18 #"triangle-generator"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bike-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 3 #") ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-bike"
0 0 24 3 1 #" "
0 0 14 3 15 #"p1-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 3 #")) "
0 12           4 60 918
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 95.0 95.6698729810778 #(struct:translate"
 #" -0.0 -0.0 #(struct:polygon (#(struct:point 0 0) #(struct:point 10 0"
 #") #(struct:point 4.999999999999999 8.660254037844387)) 255 \"red\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 500 "
 #"0) #(struct:point 500 500) #(struct:point 0 500)) outline #(struct:p"
 #"en \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point "
 #"500 0) #(struct:point 500 500) #(struct:point 0 500)) 255 \"white\")"
 #"))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-bike"
0 0 24 3 1 #" "
0 0 14 3 15 #"p2-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 3 #")) "
0 12           4 60 935
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 395.0 395.6698729810778 #(struct:transla"
 #"te -0.0 8.660254037844387 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 10 0) #(struct:point 5.000000000000002 -8.660254037844387"
 #")) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poin"
 #"t 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #("
 #"struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) o"
 #"utline #(struct:pen \"black\" 2 solid round round)))) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500"
 #")) 255 \"white\")))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; render-trail : Player Image -> Image "
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #"; draws the possibly empty list of points in the trail on the image "
 #"and returns the new image "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-trail"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 3 #")) "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-line"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-trail"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 5 #"color"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-trail"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 14 3 11 #"test-traila"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")) "
0 12           4 60 907
(
 #"(#(struct:translate 0 0 #(struct:overlay #(struct:line-segment #(str"
 #"uct:point 100 100) #(struct:point 100 300) \"red\") #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:line-segment #(struct:point 100 300"
 #") #(struct:point 300 300) \"red\") #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:line-segment #(struct:point 300 300) #(struct:point "
 #"300 100) \"red\") #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 500 0) #(st"
 #"ruct:point 500 500) #(struct:point 0 500)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round)))) #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 500 0) "
 #"#(struct:point 500 500) #(struct:point 0 500)) 255 \"white\"))))))))"
 #")))) #(struct:bb 500 500 500) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-trail"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 14 3 11 #"test-trailb"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")) "
0 12           4 60 910
(
 #"(#(struct:translate 0 0 #(struct:overlay #(struct:line-segment #(str"
 #"uct:point 100 300) #(struct:point 100 100) \"blue\") #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:line-segment #(struct:point 100 10"
 #"0) #(struct:point 300 100) \"blue\") #(struct:translate 0 0 #(struct"
 #":overlay #(struct:line-segment #(struct:point 300 100) #(struct:poin"
 #"t 300 300) \"blue\") #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 500 0) #"
 #"(struct:point 500 500) #(struct:po"
 #"int 0 500)) outline #(struct:pen \"black\" 2 solid round round)))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struc"
 #"t:point 0 500)) 255 \"white\")))))))))))) #(struct:bb 500 500 500) #"
 #"f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";render-player: Player Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";render-player returns a line and a player then puts it on top of th"
 #"e image given."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 5 #"image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"render-bike"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #") "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-line"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-bike"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 12 #"render-trail"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 12 #"player-trail"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 14 3 5 #"image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-player"
0 0 24 3 1 #" "
0 0 14 3 7 #"p1-test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")) "
0 12           4 60 1409
(
 #"(#(struct:translate 0 0 #(struct:overlay #(struct:line-segment #(str"
 #"uct:point 300 100) #(struct:point 300 100) \"red\") #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(s"
 #"truct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 295.0 95.6698729810778 #(struct:translate -0.0 8.66025403"
 #"7844387 #(struct:polygon (#(struct:point 0 0) #(struct:point 10 0) #"
 #"(struct:point 5.000000000000002 -8.660254037844387)) 255 \"red\"))) "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:line-segment #(struct:point 300 100) #(struct:point 300 300) \"r"
 #"ed\") #(struct:translate 0 0 #(struct:overlay #(struct:line-segment "
 #"#(struct:point 300 300) #(struct:point 100 300) \"red\") #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:line-segment #(struct:point 10"
 #"0 300) #(struct:point 100 100) \"red\") #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:point "
 #"0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) out"
 #"line #(struct:pen \"black\" 2 solid round round)))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500))"
 #" 255 \"white\")))))))))))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-player"
0 0 24 3 1 #" "
0 0 14 3 7 #"p2-test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")) "
0 12           4 60 1400
(
 #"(#(struct:translate 0 0 #(struct:overlay #(struct:line-segment #(str"
 #"uct:point 100 300) #(struct:point 100 300) \"blue\") #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #("
 #"struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 95.0 295.6698729810778 #(struct:translate -0.0 -0.0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 10 0) #(struct:poin"
 #"t 4.999999999999999 8.660254037844387)) 255 \"blue\"))) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:overlay #(struct:line-seg"
 #"ment #(struct:point 100 300) #(struct:point 100 100) \"blue\") #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:line-segment #(struct:po"
 #"int 100 100) #(struct:point 300 100) \"blue\") #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:line-segment #(struct:point 300 100) #(s"
 #"truct:point 300 300) \"blue\") #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poin"
 #"t 500 0) #(struct:point 500 500) #(struct:point 0 500)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:"
 #"point 500 0) #(struct:point 500 500) #(struct:point 0 500)) 255 \"wh"
 #"ite\")))))))))))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; render : World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; render produces the world as an image "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"render-player"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 13 #"render-player"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 2 #") "
0 12           4 60 1539
(
 #"(#(struct:translate 0 0 #(struct:overlay #(struct:line-segment #(str"
 #"uct:point 100 100) #(struct:point 100 95) \"red\") #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(st"
 #"ruct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 95.0 95.6698729810778 #(struct:translate -0.0 -0.0 #(struc"
 #"t:polygon (#(struct:point 0 0) #(struct:point 10 0) #(struct:point 4"
 #".999999999999999 8.660254037844387)) 255 \"red\"))) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:overlay #(struct:line-segment"
 #" #(struct:point 400 400) #(struct:point 400 405) \"blue\") #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 5"
 #"00) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 395.0 395.6698729810778 #(struct:translate -0.0 8."
 #"660254037844387 #(struct:polygon (#(struct:point 0 0) #(struct:point"
 #" 10 0) #(struct:point 5.000000000000002 -8.660254037844387)) 255 \"b"
 #"lue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 500 0) #(struct:point 500 500) #(struct:point 0 500)) outline #(s"
 #"truct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct"
 #":point 500 0) #(struct:point 500 500) #(struct:point 0 500)) 255 \"w"
 #"hite\")))))))))))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 24 3 2 #") "
0 12           4 60 2257
(
 #"(#(struct:translate 0 0 #(struct:overlay #(struct:line-segment #(str"
 #"uct:point 300 100) #(struct:point 300 100) \"red\") #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(s"
 #"truct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 295.0 95.6698729810778 #(struct:translate -0.0 8.66025403"
 #"7844387 #(struct:polygon (#(struct:point 0 0) #(struct:point 10 0) #"
 #"(struct:point 5.000000000000002 -8.660254037844387)) 255 \"red\"))) "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:line-segment #(struct:point 300 100) #(struct:point 300 300) \"r"
 #"ed\") #(struct:translate 0 0 #(struct:overlay #(struct:line-segment "
 #"#(struct:point 300 300) #(struct:point 100 300) \"red\") #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:line-segment #(struct:point 10"
 #"0 300) #(struct:point 100 100) \"red\") #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:line-segment #(struct:point 100 300) #(struct:p"
 #"oint 100 300) \"blue\") #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 95.0 295.66987298"
 #"10778 #(struct:translate -0.0 -0.0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 10 0) #(struct:point 4.999999999999999 8.6602540"
 #"37844387)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:line-segment #(struct:point 100 300) "
 #"#(struct:point 100 100) \"blue\") #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:line-segment #(struct:point 100 100) #(struct:point 3"
 #"00 100) \"blue\") #(struct:translate 0 0 #(struct:overlay #(struct:l"
 #"ine-segment #(struct:point 300 100) #(struct:point 300 300) \"blue\""
 #") #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:"
 #"point 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 5"
 #"00) #(struct:point 0 500)) outline #(struct:pen \"black\" 2 solid ro"
 #"und round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 5"
 #"00 500) #(struct:point 0 500)) 255 \"white\"))))))))))))))))))))))))"
 #")))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";; Stage 2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; move : world -> world"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";; move takes a world and returns a new world with the position of b"
 #"oth players moved by an incrimentation"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-bike"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"make-player"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-bike"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; move-bike : bike -> bike"
0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";; move-bike takes a bike and returns a new bike, correctly moved in"
 #" the proper direction based on the bikes "
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; direction. This serves as a helper for move"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-bike"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-bike"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"bike-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-bike"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"bike-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-bike"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"bike-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"make-bike"
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"bike-color"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"bk"
0 0 24 3 8 #")))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike3"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike4"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"tbike5"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tworld1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer1"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tworld2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer3"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tworld3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer5"
0 0 24 3 1 #" "
0 0 14 3 8 #"tplayer2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 7 #"tworld1"
0 0 24 3 2 #") "
0 0 14 3 7 #"tworld2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; process-key : world key-event -> world"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";; takes a world and a key-event, updating the world and changing th"
 #"e direction of the player."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"make-bike"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"bike-color"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 8 #")))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 7 #"tworld1"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-bike"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 4 #"\"up\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 5 #"\"red\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"make-player"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-bike"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 6 #"\"down\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 6 #"\"blue\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";stop functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";touched: Bike Point -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";touched compares a bike to points to see if they touched."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touched"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 5 #"))) ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"bike-direction"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"bike"
0 0 24 3 5 #"))) ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touched"
0 0 24 3 1 #" "
0 0 14 3 15 #"p1-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"105"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touched"
0 0 24 3 1 #" "
0 0 14 3 15 #"p2-bike-initial"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"395"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";[list-of Points] is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - empty"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; - (cons point [list-of Points])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";points-on-trail: Trail -> [List-of Points]"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";points-on-trail lists the points that make-up trail."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list-points"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"trail"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"105"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"115"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"135"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"145"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"165"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"175"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"185"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"195"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"105"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"115"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"135"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"145"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"155"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"165"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"175"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"185"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"195"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";list-points: Point Point -> [list-of Points]"
0 0 24 29 1 #"\n"
0 0 17 3 104
(
 #";list-points consumes two points and returns a list of points betwee"
 #"n the two points in increments of 5."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list-points"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 11 #"list-points"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 11 #"list-points"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 11 #"list-points"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 11 #"list-points"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list-points"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"105"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"115"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"130"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"135"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"145"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-point"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";game-over-p1: World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";game-over reports true if player1  touches either their trail or pl"
 #"ayer2's trail."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"game-over-p1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"game-over-p1"
0 0 24 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"game-over-p1"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";game-over-p2: World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";game-over reports true if player1  touches either their trail or pl"
 #"ayer2's trail."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"game-over-p2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 15 #"points-on-trail"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-trail"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"game-over-p2"
0 0 24 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"game-over-p2"
0 0 24 3 1 #" "
0 0 14 3 7 #"INITIAL"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; basic game "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"process-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 26 #";       : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 50 #";if any of the bikes get outside we should stop it"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"stop-when"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 17 3 46 #";if the bikes touch the corners it should stop"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 8 #";player1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 8 #";player2"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 60
#";if the bikes touch the top or bottom borders it should stop"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 8 #";player1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 8 #";player2"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 60
#";if the bikes touch the left or right borders it should stop"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 8 #";player1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 8 #";player2"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"point-y"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"boundary"
0 0 24 3 1 #" "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"bike-location"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-bike"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-player2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))) "
0 0 14 3 6 #"MOVE-D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 12 #"game-over-p1"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 12 #"game-over-p2"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))) "
0 0 14 3 8 #"you-lose"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"you-lose"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Game Over\""
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 29 1 #"\n"
0           0
